package com.lf.designpattern.singleton;

/**
 * @data on 2018/4/26 14:56
 * @describe: 单例模式(Singleton Pattern)
 */

public class Singleton {
    /**
     * 一个类只有一个实例，即一个类只有一个对象实例。
     *
     * 单例模式可以分为懒汉式和饿汉式：

     　　　　懒汉式单例模式：在类加载时不初始化。

     　　　　饿汉式单例模式：在类加载时就完成了初始化，所以类加载比较慢，但获取对象的速度快。
     */

    //使用场景
    /**
     * ● 要求生成唯一序列号的环境；
     * ● 在整个项目中需要一个共享访问点或共享数据，例如一个Web页面上的计数器，
     *    可以不用把每次刷新都记录到数据库中，使用单例模式保持计数器的值，并确保是线程安全的；
     * ● 创建一个对象需要消耗的资源过多，如要访问IO和数据库等资源；
     * ● 需要定义大量的静态常量和静态方法（如工具类）的环境，可以采用单例模式（当 然，也可以直接声明为static的方式）。
     */


}
